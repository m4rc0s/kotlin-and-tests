# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  deploy-cmd:
    parameters: 
      environment:
        type: string
        default: dev
    steps:
      - run:
          name: Application Deployment
          command: echo Deploy application to Kubernetes Cluster with Argo in << parameters.environment >> environment
    
branch_not_main_filter: &run_when_branch_not_main
  when:
    not:
      matches:
        pattern: "^main$"
        value: << pipeline.git.branch >>

branch_is_main_filter: &run_when_branch_is_main
  when:
    matches:
      pattern: "^main$"
      value: << pipeline.git.branch >>        


orbs:
  gradle: circleci/gradle@3.0.0

jobs:
  build:
    docker:
      - image: cimg/openjdk:18.0.2
        environment:
          SONAR_TOKEN: $SONAR_TOKEN
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: pwd && ls -la
      - run: gradle --version
      - run: cd apps/demo && ./gradlew clean build -x test && docker build .
      - run: docker image
  deploy:
    parameters:
      environment:
        type: string
        default: dev
    docker:
      - image: cimg/openjdk:18.0.2
    steps:
      - deploy-cmd:
          environment: << parameters.environment >>
  unit-test: 
    docker:
      - image: cimg/openjdk:18.0.2
        environment:
          SONAR_TOKEN: $SONAR_TOKEN

    working_directory: /mnt/ramdisk

    steps:
      - checkout
      - run: |
            mkdir -p ~/test-results/reports
            cd apps/demo && ./gradlew clean unitTest 
            cp build/test-results/unitTest/*.xml ~/test-results/reports
            ls -la build/testReports/test
            export SONAR_TOKEN=e927b3913485346eeb68b540687d6cfcb1dfa9bb
            echo $SONAR_TOKEN
            ls -la
            ./gradlew sonarqube
      - store_test_results:
          path: ~/test-results

workflows:
  quality_assurance:
    <<: *run_when_branch_not_main
    jobs:
      - unit-test:
          context: SonarCloud
      - gradle/test:
          name: component-test
          app_src_directory: "./apps/demo/"
          test_results_path: "./apps/demo/build/test-results/componentTest"
          reports_path: "./apps/demo/build/reports"
          test_command: "componentTest"
  build_and_deploy:
    <<: *run_when_branch_is_main
    jobs:
      - build:
          context: SonarCloud
      - deploy:
          name: deploy
          environment: prod
          requires:
           - build
